"use client"
import { useForm } from "react-hook-form";
import { DevTool } from "@hookform/devtools";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { Navbar } from "../components/navbar";
import { Footer } from "../components/footer";
import { Metadata } from "next";
import { useRouter } from 'next/navigation'
/*
export const metadata: Metadata = {
    title: {
        absolute: "Register",
    },
};
*/
type FormValues = {
    first_name: string
    sur_name: string
    email: string
    country_code: string
    phone_number: string
    password: string
    password_confirm: string
};

const schema = z.object({
    first_name: z.string().min(1, "First name is required"),
    sur_name: z.string().min(1, "Sur name is required"),
    email: z
        .string()
        .min(1, "Email is required")
        .email("Email format is not valid"),
    country_code: z.string().refine((val) => !Number.isNaN(parseInt(val, 10)) && parseInt(val, 10) > 0, {
        message: "Country code must be greater than 0"
    }),
    phone_number: z.string().refine((val) => !Number.isNaN(parseInt(val, 10)) && parseInt(val, 10) > 0, {
        message: "Phone number must be greater than 0"
    }),
    password: z.string().min(1, "Password is required"),
    password_confirm: z.string().min(1, "Confirm password is required"),
});

export default function Register() {

    const router = useRouter();

    const form = useForm<FormValues>({
        defaultValues: {
            first_name: "",
            sur_name: "",
            email: "",
            country_code: "",
            phone_number: "",
            password: "",
            password_confirm: ""
        },
        resolver: zodResolver(schema)
    });

    const { register, control, handleSubmit, formState } = form;

    const { errors } = formState;

    const onSubmit = (data: FormValues) => {

        console.log('Form submitted', data);

        let bodyData = {
            firstName: data.first_name,
            surName: data.sur_name,
            email: data.email,
            password: data.password,
            countryCode: data.country_code,
            phone: data.phone_number,
            isSuperAdmin: false,
            isAdmin: true
        };

        console.log(JSON.stringify(bodyData));

        const res = fetch('https://j3aovbsud0.execute-api.us-east-1.amazonaws.com/rmdx_admins', {
            method: 'POST',
            body: JSON.stringify(bodyData),
        })
            .then((response) => response.json())
            .then((data) => {
                
                console.log(data);
                
                // Assuming the data returned includes an indication of successful creation
                if (data.ID > 0) {
                    console.log(data.ID);
                    router.push('/admin');
                }
            })
            .catch((error) => {
                console.log(error);
                // Handle errors
            });        
    };

    return (
        <>
            <Navbar />
            <div className="px-[20px] lg:container lg:px-20 mx-auto">
                <div className="container mx-auto">
                    <div className="flex flex-col lg:flex-row w-10/12 lg:w-8/12 bg-white rounded-xl mx-auto overflow-hidden">
                        <div className="w-full lg:w-1/2 flex flex-col items-center justify-center p-12 bg-no-repeat bg-cover bg-center" >
                            <h1 className="text-black text-3xl mb-3">Welcome</h1>
                            <div>
                                <p className="text-black">Create your account. Itâ€™s free and only take a minute.</p>
                            </div>
                        </div>
                        <div className="w-full lg:w-1/2 py-16 px-12">
                            <h2 className="text-3xl mb-4">Sign up</h2>
                            <div className="flex-1 space-y-4">
                                <form onSubmit={handleSubmit(onSubmit)} noValidate> {/* Validation will be handle by React*/}
                                    <div className="grid gap-4 md:grid-cols-1 lg:grid-cols-1">
                                        <div>
                                            <label htmlFor="first_name" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">First name</label>
                                            <input type="text" id="first_name" {...register("first_name")} placeholder="First name" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.first_name?.message}</p>
                                        </div>
                                        <div>
                                            <label htmlFor="sur_name" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Sur name</label>
                                            <input type="text" id="sur_name" {...register("sur_name")} placeholder="Sur name" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.sur_name?.message}</p>
                                        </div>
                                        <div>
                                            <label htmlFor="country_code" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Country code</label>
                                            <input type="number" id="country_code" {...register("country_code")} placeholder="Country code" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.country_code?.message}</p>
                                        </div>
                                        <div>
                                            <label htmlFor="phone_number" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Phone number</label>
                                            <input type="number" id="phone_number" {...register("phone_number")} placeholder="Phone number" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.phone_number?.message}</p>
                                        </div>
                                        <div>
                                            <label htmlFor="email" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
                                            <input type="text" id="email" {...register("email")} placeholder="Email" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.email?.message}</p>
                                        </div>
                                        <div>
                                            <label htmlFor="password" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
                                            <input type="password" id="password" {...register("password")} placeholder="Password" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.password?.message}</p>
                                        </div>
                                        <div>
                                            <label htmlFor="password_confirm" className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Confirm Password</label>
                                            <input type="password" id="password_confirm" {...register("password_confirm")} placeholder="Confirm Password" className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                                            <p className="mb-2 mt-2 text-sm text-red-600 dark:text-red-500">{errors.password_confirm?.message}</p>
                                        </div>
                                    </div>
                                    <div className="grid gap-4 md:grid-cols-1 lg:grid-cols-1">
                                        <button className="focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900">Save</button>
                                    </div>
                                </form >
                                <DevTool control={control} />
                            </div>
                        </div>
                    </div>
                </div>
                <Footer />
            </div >
        </>
    );
}
